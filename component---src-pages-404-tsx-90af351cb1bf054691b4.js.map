{"version":3,"file":"component---src-pages-404-tsx-90af351cb1bf054691b4.js","mappings":";4GAAA,OAOA,WACE,aAEA,IAAIA,EAAS,CAAC,EAAEC,eAEhB,SAASC,IAEP,IADA,IAAIC,EAAU,GACLC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EACrB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IACvB,GAAIA,EAAID,OAAQ,CACd,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACFT,EAAQM,KAAKG,EAEjB,OACK,GAAgB,WAAZJ,EAAsB,CAC/B,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,WAAaP,EAAIO,SAASA,WAAWG,SAAS,iBAAkB,CACpGd,EAAQM,KAAKF,EAAIO,YACjB,QACF,CACA,IAAK,IAAII,KAAOX,EACVP,EAAOmB,KAAKZ,EAAKW,IAAQX,EAAIW,IAC/Bf,EAAQM,KAAKS,EAGnB,CArBkB,CAsBpB,CACA,OAAOf,EAAQiB,KAAK,IACtB,CACqCC,EAAOC,SAC1CpB,EAAWqB,QAAUrB,EACrBmB,EAAOC,QAAUpB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,CACR,UAFoB,OAEpB,YAIJ,CA7CD,uGCAasB,EAAO,WAClB,IAAMC,EAAaC,EAAAA,EAAAA,KAEnB,OACEC,EAAAA,cAACC,EAAAA,EAAS,CACRH,KAAMA,EACNI,UAAU,oDCbS,SDkBzB,YEbaC,EAAU,WACrB,OACEH,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,kBACXE,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OACnBL,EAAAA,cAAAA,KAAAA,CAAIT,IAAKc,EAAMC,IAAKJ,UAAU,qBAC5BF,EAAAA,cAACC,EAAAA,EAAS,CAACH,KAAMO,EAAOE,gBAAgB,aACtCP,EAAAA,cAACQ,EAAAA,EAAe,KAAEH,EAAMI,UAEvB,IAIb,ECZaC,EAAS,WACpB,OACEV,EAAAA,cAAAA,SAAAA,CAAQE,UAAU,uCAChBF,EAAAA,cAACQ,EAAAA,EAAe,KACdR,EAAAA,cAACH,EAAI,OAEPG,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACG,EAAO,OAIhB,ECTaQ,EAAa,SAACC,GACzB,IAAQC,EAAaD,EAAbC,SAER,OACEb,EAAAA,cAAAA,OAAAA,CAAME,UAAU,8BACdF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,iEACbF,EAAAA,cAACU,EAAM,MACPV,EAAAA,cAAAA,UAAAA,CAASE,UAAU,SAASW,IAIpC,6FCNaZ,EAAY,SAACW,GACxB,IACEd,EAKEc,EALFd,KACAe,EAIED,EAJFC,SACAX,EAGEU,EAHFV,UAAU,EAGRU,EAFFE,mBAAAA,OAAkB,OAAO,IAEvBF,EADFL,gBAAAA,OAAe,MAAG,GAAE,EAGtB,IAAKT,EAAKQ,IACR,OAAO,KAGT,IAAMS,EAAajB,EAAKQ,IAAIU,MAAM,UAC5BC,EAASnB,EAAKQ,IAAIY,WAAW,KAE7BC,EACJnB,EAAAA,cAAAA,IAAAA,CACEoB,KAAMtB,EAAKQ,IACXe,MAAOvB,EAAKW,QACZP,UAAWA,EACXoB,QAASL,GAAUH,EAAqB,SAAW,QACnDS,IAAI,cAEHV,GAICW,EACJxB,EAAAA,cAACyB,EAAAA,GAAI,CACHC,GAAI5B,EAAKQ,IACTe,MAAOvB,EAAKW,QACZF,gBAAiBA,EACjBL,UAAWA,GAEVW,GAIL,OAAOE,GAAcE,EAASE,EAAeK,CAC/C,sGC3CahB,EAAkB,SAC7BI,GAEA,IAAQC,EAAwCD,EAAxCC,SAAUX,EAA8BU,EAA9BV,UAAWyB,EAAmBf,EAAnBe,eAEvBpD,EAAaqD,IAAkB1B,EAAWyB,EAAgB,CAC9D,uCAAuC,EACvC,uBAAwBA,IAG1B,OAAO3B,EAAAA,cAAAA,OAAAA,CAAME,UAAW3B,GAAasC,EACvC,4FCTO,IAAMd,EAAiB,CAC5B8B,KAAM,CACJpB,QAAS,QACTH,IAAK,KAEPwB,SAAU,CACRrB,QAAS,WACTH,IAAK,aAEPyB,KAAM,CACJtB,QAAS,OACTH,IAAK,4BAIIF,EAAahB,OAAO4C,KAAKjC,GAAQkC,KAAI,SAAA1C,GAChD,IAAM2C,EAAW3C,EACjB,OAAO,OAAP,UAAYQ,EAAOmC,GACrB,2GC1BaC,EAAiB,WAC5B,OACEnC,EAAAA,cAACW,EAAAA,EAAU,KACTX,EAAAA,cAAAA,KAAAA,KAAAA,aAGN,ECFA,EAJiB,WACf,OAAOA,EAAAA,cAACmC,EAAc,KACxB","sources":["webpack://leeorf.githuib.io/./node_modules/classnames/index.js","webpack://leeorf.githuib.io/./src/components/elements/Logo.tsx","webpack://leeorf.githuib.io/./src/constants/siteMeta.ts","webpack://leeorf.githuib.io/./src/components/elements/NavMenu.tsx","webpack://leeorf.githuib.io/./src/components/shared/Header.tsx","webpack://leeorf.githuib.io/./src/components/layout/PageLayout.tsx","webpack://leeorf.githuib.io/./src/components/shared/HyperLink.tsx","webpack://leeorf.githuib.io/./src/components/shared/InteractiveText.tsx","webpack://leeorf.githuib.io/./src/constants/routes.ts","webpack://leeorf.githuib.io/./src/components/screens/NotFoundScreen.tsx","webpack://leeorf.githuib.io/./src/pages/404.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  var nativeCodeString = '[native code]';\n  function classNames() {\n    var classes = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n          classes.push(arg.toString());\n          continue;\n        }\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n    return classes.join(' ');\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from 'react';\nimport { routes } from '../../constants/routes';\nimport { brandName } from '../../constants/siteMeta';\n\nimport { Link } from '../../types/Link';\nimport { HyperLink } from '../shared/HyperLink';\n\nexport const Logo = (): React.ReactElement => {\n  const link: Link = routes.home;\n\n  return (\n    <HyperLink\n      link={link}\n      className=\"font-extrabold text-sm tracking-widest uppercase\"\n    >\n      {brandName}\n    </HyperLink>\n  );\n};\n","export const brandName = 'leeorf';\n","import React from 'react';\nimport { routesList } from '../../constants/routes';\nimport { HyperLink } from '../shared/HyperLink';\nimport { InteractiveText } from '../shared/InteractiveText';\n\nexport const NavMenu = (): React.ReactElement => {\n  return (\n    <ul className=\"flex space-x-5\">\n      {routesList.map(route => (\n        <li key={route.url} className=\"uppercase text-xs\">\n          <HyperLink link={route} activeClassName=\"font-bold\">\n            <InteractiveText>{route.caption}</InteractiveText>\n          </HyperLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Logo } from '../elements/Logo';\nimport { NavMenu } from '../elements/NavMenu';\nimport { InteractiveText } from './InteractiveText';\n\nexport const Header = () => {\n  return (\n    <header className=\"flex items-center w-full space-x-12\">\n      <InteractiveText>\n        <Logo />\n      </InteractiveText>\n      <nav>\n        <NavMenu />\n      </nav>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Header } from '../shared/Header';\n\ntype PageLayoutProps = {\n  children: React.ReactNode;\n};\n\nexport const PageLayout = (props: PageLayoutProps): React.ReactElement => {\n  const { children } = props;\n\n  return (\n    <main className=\"flex flex-col items-center\">\n      <div className=\"max-w-screen-xl self-stretch m-auto w-full px-6 py-6 sm:px-12\">\n        <Header />\n        <article className=\"py-12\">{children}</article>\n      </div>\n    </main>\n  );\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { Link as LinkType } from '../../types/Link';\n\ntype HyperLinkProps = {\n  link: LinkType;\n  children: React.ReactNode;\n  activeClassName?: string;\n  shouldOpenInNewTab?: boolean;\n  className?: string;\n};\n\nexport const HyperLink = (props: HyperLinkProps): React.ReactElement | null => {\n  const {\n    link,\n    children,\n    className,\n    shouldOpenInNewTab = true,\n    activeClassName = '',\n  } = props;\n\n  if (!link.url) {\n    return null;\n  }\n\n  const isExternal = link.url.match(/http/gi);\n  const isHash = link.url.startsWith('#');\n\n  const externalLink = (\n    <a\n      href={link.url}\n      title={link.caption}\n      className={className}\n      target={!isHash && shouldOpenInNewTab ? '_blank' : '_self'}\n      rel=\"noreferrer\"\n    >\n      {children}\n    </a>\n  );\n\n  const internalLink = (\n    <Link\n      to={link.url}\n      title={link.caption}\n      activeClassName={activeClassName}\n      className={className}\n    >\n      {children}\n    </Link>\n  );\n\n  return isExternal || isHash ? externalLink : internalLink;\n};\n","import React from 'react';\nimport combineClassNames from 'classnames';\n\ntype InteractiveTextProps = {\n  children: React.ReactNode;\n  className?: string;\n  hoverClassName?: string;\n};\n\nexport const InteractiveText = (\n  props: InteractiveTextProps\n): React.ReactElement => {\n  const { children, className, hoverClassName } = props;\n\n  const classNames = combineClassNames(className, hoverClassName, {\n    'transition duration-150 ease-in-out': true,\n    'hover:text-teal-500': !hoverClassName,\n  });\n\n  return <span className={classNames}>{children}</span>;\n};\n","import { Link } from '../types/Link';\n\ntype Slug = 'home' | 'projects' | 'blog';\n\nexport type Route = {\n  path: string;\n  caption: string;\n};\n\ntype Routes = Record<Slug, Link>;\n\nexport const routes: Routes = {\n  home: {\n    caption: 'Sobre',\n    url: '/',\n  },\n  projects: {\n    caption: 'Projetos',\n    url: '/projects',\n  },\n  blog: {\n    caption: 'Blog',\n    url: 'https://blog.leeorf.dev',\n  },\n};\n\nexport const routesList = Object.keys(routes).map(key => {\n  const routeKey = key as Slug;\n  return { ...routes[routeKey] };\n});\n","import React from 'react';\nimport { PageLayout } from '../layout/PageLayout';\n\nexport const NotFoundScreen = (): React.ReactElement => {\n  return (\n    <PageLayout>\n      <h1>Not found</h1>\n    </PageLayout>\n  );\n};\n","import React from 'react';\nimport { NotFoundScreen } from '../components/screens/NotFoundScreen';\n\nconst NotFound = (): React.ReactElement => {\n  return <NotFoundScreen />;\n};\n\nexport default NotFound;\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","Logo","link","routes","React","HyperLink","className","NavMenu","routesList","route","url","activeClassName","InteractiveText","caption","Header","PageLayout","props","children","shouldOpenInNewTab","isExternal","match","isHash","startsWith","externalLink","href","title","target","rel","internalLink","Link","to","hoverClassName","combineClassNames","home","projects","blog","keys","map","routeKey","NotFoundScreen"],"sourceRoot":""}