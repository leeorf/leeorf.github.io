{"version":3,"file":"component---src-pages-projects-tsx-9a3fb2ceb8f83ac7b741.js","mappings":"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","sources":["webpack://leeorf.githuib.io/./src/components/shared/Heading.tsx","webpack://leeorf.githuib.io/./src/components/shared/Gallery.tsx","webpack://leeorf.githuib.io/./src/constants/date.ts","webpack://leeorf.githuib.io/./src/utils.ts","webpack://leeorf.githuib.io/./src/components/shared/Button.tsx","webpack://leeorf.githuib.io/./src/components/shared/Row.tsx","webpack://leeorf.githuib.io/./src/components/shared/Card.tsx","webpack://leeorf.githuib.io/./src/components/shared/DateRange.tsx","webpack://leeorf.githuib.io/./src/components/elements/ProjectPreview.tsx","webpack://leeorf.githuib.io/./src/components/elements/ProjectsList.tsx","webpack://leeorf.githuib.io/./src/components/shared/Badge.tsx","webpack://leeorf.githuib.io/./src/components/shared/PageHeader.tsx","webpack://leeorf.githuib.io/./src/components/screens/ProjectsScreen.tsx","webpack://leeorf.githuib.io/./src/data/projects.ts","webpack://leeorf.githuib.io/./src/pages/projects.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nexport enum HeadingLevel {\n  h1 = 'h1',\n  h2 = 'h2',\n  h3 = 'h3',\n}\n\ntype HeadingProps = {\n  children: React.ReactNode;\n  level: HeadingLevel;\n  className?: string;\n};\n\nconst headingClasses = {\n  [HeadingLevel.h1]: 'text-3xl',\n  [HeadingLevel.h2]: 'text-2xl',\n  [HeadingLevel.h3]: 'text-xl',\n};\n\nexport const Heading = (props: HeadingProps): React.ReactElement => {\n  const { level, children, className } = props;\n\n  const HeadingElement = level;\n\n  const classes = classNames(className, {\n    [headingClasses[level]]: true,\n  });\n\n  return <HeadingElement className={classes}>{children}</HeadingElement>;\n};\n","import React from 'react';\n\ntype GalleryProps = {\n  children: React.ReactNode;\n};\n\nexport const Gallery = (props: GalleryProps): React.ReactElement => {\n  const { children } = props;\n\n  return (\n    <div className=\"grid gap-12 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\">\n      {children}\n    </div>\n  );\n};\n","export const months = [\n  'Jan',\n  'Fev',\n  'Mar',\n  'Abr',\n  'Maio',\n  'Jun',\n  'Jul',\n  'Ago',\n  'Set',\n  'Out',\n  'Nov',\n  'Dez',\n];\n","import { months } from './constants/date';\n\ntype DateStringOptions = {\n  withDay?: boolean;\n};\n\nexport const idFromSetence = (value: string) => {\n  return value\n    .split(' ')\n    .map(word => word.slice(0, 2))\n    .join('');\n};\n\nexport const dateString = (\n  isoDate: string,\n  options?: DateStringOptions\n): string => {\n  let withDays;\n\n  if (options) {\n    withDays = options.withDay;\n  }\n\n  // Very silly validation, improve later\n  if (!isoDate.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n    throw new Error('ISO 8601 Date expected! YYYY-mm-dd');\n  }\n\n  const date = new Date(isoDate);\n\n  const year = date.getFullYear();\n  const month = months[date.getMonth()];\n  const day = withDays ? date.getDate() : '';\n  const separator = withDays ? ', ' : ' ';\n\n  return `${month}${separator}${day}${year}`;\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from '../../types/Link';\nimport { HyperLink } from './HyperLink';\nimport { InteractiveText } from './InteractiveText';\n\ntype ButtonProps = {\n  children: React.ReactNode;\n  /**\n   * If link is passed, we render the element as an anchor tag instead\n   * of a button.\n   */\n  link?: Link;\n  className?: string;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  startAdornment?: React.ReactNode;\n} & React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\nexport const Button = (props: ButtonProps): React.ReactElement => {\n  const { link, className, children, onClick, startAdornment } = props;\n\n  const classes = classNames(className, {\n    flex: true,\n    'items-center': true,\n    'gap-2': true,\n    'bg-white': true,\n    'py-2 px-3': true,\n    rounded: true,\n    'shadow-sm': true,\n    'border border-solid border-gray-300': true,\n  });\n\n  if (link) {\n    return (\n      <HyperLink link={link}>\n        <InteractiveText\n          className={classes}\n          hoverClassName=\"hover:bg-black hover:text-white hover:border-black\"\n        >\n          {startAdornment}\n          {children}\n        </InteractiveText>\n      </HyperLink>\n    );\n  }\n\n  return (\n    <button type=\"button\" className={classes} onClick={onClick}>\n      {startAdornment}\n      {children}\n    </button>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype RowProps = {\n  children: React.ReactNode;\n  responsive?: boolean;\n  className?: string;\n};\n\nexport const Row = (props: RowProps): React.ReactElement => {\n  const { children, className, responsive = false } = props;\n\n  const classes = classNames(className, {\n    flex: true,\n    'items-center': true,\n    'flex-col': responsive,\n    'sm:flex-row': responsive,\n  });\n\n  return <div className={classes}>{children}</div>;\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from '../../types/Link';\nimport { HyperLink } from './HyperLink';\nimport { Heading, HeadingLevel } from './Heading';\nimport { Row } from './Row';\nimport { InteractiveText } from './InteractiveText';\n\ntype CardRootProps = {\n  children?: React.ReactNode;\n};\n\nconst CardRoot = (props: CardRootProps): React.ReactElement => {\n  const { children } = props;\n\n  return (\n    <div className=\"flex flex-col shadow-card rounded-md bg-white overflow-hidden\">\n      {children}\n    </div>\n  );\n};\n\ntype CardMediaProps = {\n  children: React.ReactNode;\n  link?: Link;\n  className?: string;\n};\n\nconst CardMedia = (props: CardMediaProps): React.ReactElement => {\n  const { children, link, className } = props;\n\n  const classes = classNames(className, {\n    'h-48': true,\n    'overflow-hidden': true,\n    'transition-transform': true,\n    'hover:-translate-y-1  hover:scale-105': true,\n  });\n\n  const wrappedElement = link ? (\n    <HyperLink link={link}>{children}</HyperLink>\n  ) : (\n    children\n  );\n\n  return <div className={classes}>{wrappedElement}</div>;\n};\n\ntype CardContentProps = {\n  children: React.ReactNode;\n  className?: string;\n};\n\nconst CardContent = (props: CardContentProps) => {\n  const { children, className } = props;\n\n  const classes = classNames(className, {\n    'p-6': true,\n    'flex-1': true,\n  });\n\n  return <div className={classes}>{children}</div>;\n};\n\ntype CardTitleProps = {\n  children: React.ReactNode;\n  link?: Link;\n  className?: string;\n};\n\nconst CardTitle = (props: CardTitleProps) => {\n  const { children, link, className } = props;\n\n  const classes = classNames(className, {\n    'mb-3': true,\n  });\n\n  const wrappedElement = link ? (\n    <HyperLink link={link}>\n      <InteractiveText>{children}</InteractiveText>\n    </HyperLink>\n  ) : (\n    children\n  );\n\n  return (\n    <Heading level={HeadingLevel.h3} className={classes}>\n      {wrappedElement}\n    </Heading>\n  );\n};\n\ntype CardActionsProps = {\n  children: React.ReactNode;\n  className?: string;\n};\n\nconst CardActions = (props: CardActionsProps) => {\n  const { children, className } = props;\n\n  const classes = classNames(className, {\n    'px-6 pb-6': true,\n  });\n\n  return (\n    <div className={classes}>\n      <Row className=\"gap-4 flex-col sm:flex-row\">{children}</Row>\n    </div>\n  );\n};\n\nexport const Card = {\n  Root: CardRoot,\n  Media: CardMedia,\n  Content: CardContent,\n  Title: CardTitle,\n  Actions: CardActions,\n};\n","import React from 'react';\nimport { FiCalendar } from 'react-icons/fi';\nimport { DateString } from '../../types/Date';\nimport { dateString } from '../../utils';\nimport { Row } from './Row';\n\ntype DateRangeProps = {\n  start?: DateString;\n  end?: DateString;\n  className?: string;\n  withDay?: boolean;\n};\n\nexport const DateRange = (props: DateRangeProps): React.ReactElement | null => {\n  const { start, end, className, withDay } = props;\n\n  if (!start && !end) {\n    return null;\n  }\n\n  const startDateString = start ? dateString(start, { withDay }) : null;\n  const endDateString = end ? dateString(end, { withDay }) : null;\n  const separator = start && end ? ' → ' : null;\n\n  return (\n    <div className={className}>\n      <Row>\n        <FiCalendar className=\"mr-1\" />\n        <div>\n          {startDateString}\n          {separator}\n          {endDateString}\n        </div>\n      </Row>\n    </div>\n  );\n};\n","import React from 'react';\nimport { FaGithub, FaPlay } from 'react-icons/fa';\nimport { Project } from '../../types/Project';\nimport { idFromSetence } from '../../utils';\nimport { Button } from '../shared/Button';\nimport { Card } from '../shared/Card';\nimport { DateRange } from '../shared/DateRange';\nimport { FluidImage } from '../shared/FluidImage';\nimport { Row } from '../shared/Row';\nimport { Tags } from '../shared/Tags';\n\ntype ProjectPreviewProps = {\n  project: Project;\n};\n\nexport const ProjectPreview = (\n  props: ProjectPreviewProps\n): React.ReactElement => {\n  const { project } = props;\n\n  const projectTagsElement = project.tags?.length ? (\n    <Tags tags={project.tags} numToShow={3} />\n  ) : null;\n\n  const projectDates = (\n    <DateRange\n      start={project.startDate}\n      end={project.endDate}\n      className=\"text-xs text-gray-500\"\n    />\n  );\n\n  const projectSummaryLines = project.summary?.length\n    ? project.summary.map(summary => (\n        <p key={idFromSetence(summary)} className=\"font-light\">\n          {summary}\n        </p>\n      ))\n    : null;\n\n  const projectSummary = projectSummaryLines ? (\n    <div>{projectSummaryLines}</div>\n  ) : null;\n\n  const demoLink =\n    project.demoUrl && !project.archived ? (\n      <Button startAdornment={<FaPlay />} link={project.demoUrl}>\n        Demo\n      </Button>\n    ) : null;\n\n  const sourceCodeLink =\n    project.srcUrl && !project.archived ? (\n      <Button startAdornment={<FaGithub />} link={project.srcUrl}>\n        Source Code\n      </Button>\n    ) : null;\n\n  const projectCover = project.cover ? (\n    <FluidImage image={project.cover} />\n  ) : null;\n\n  return (\n    <Card.Root>\n      <Card.Media link={project.srcUrl}>{projectCover}</Card.Media>\n      <Card.Content className=\"space-y-2\">\n        <Card.Title link={project.srcUrl}>{project.name}</Card.Title>\n        <Row>\n          <div>{projectDates}</div>\n        </Row>\n        {projectSummary}\n        {projectTagsElement}\n      </Card.Content>\n      <Card.Actions>\n        {demoLink}\n        {sourceCodeLink}\n      </Card.Actions>\n    </Card.Root>\n  );\n};\n","import React from 'react';\n\nimport { Project } from '../../types/Project';\nimport { Gallery } from '../shared/Gallery';\nimport { ProjectPreview } from './ProjectPreview';\n\ntype ProjectsListProps = {\n  projects: Project[];\n};\n\nexport const ProjectsList = (props: ProjectsListProps): React.ReactElement => {\n  const { projects } = props;\n\n  const projectsElements = projects.map(project => (\n    <ProjectPreview key={project.id} project={project} />\n  ));\n\n  return <Gallery>{projectsElements}</Gallery>;\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype BadgeProps = {\n  className?: string;\n  children: React.ReactNode;\n};\n\nexport const Badge = (props: BadgeProps): React.ReactElement => {\n  const { children, className } = props;\n\n  const classes = classNames(className, {\n    'bg-gray-200': true,\n    'px-1': true,\n    rounded: true,\n    'text-xs': true,\n  });\n\n  return <span className={classes}>{children}</span>;\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Heading, HeadingLevel } from './Heading';\n\ntype PageHeaderProps = {\n  children: React.ReactNode;\n  className?: string;\n};\n\nexport const PageHeader = (props: PageHeaderProps): React.ReactElement => {\n  const { children, className } = props;\n\n  const classes = classNames(className, {\n    'mb-6': true,\n    uppercase: true,\n    'font-extrabold': true,\n  });\n\n  return (\n    <Heading level={HeadingLevel.h1} className={classes}>\n      {children}\n    </Heading>\n  );\n};\n","import React from 'react';\nimport { Project } from '../../types/Project';\nimport { ProjectsList } from '../elements/ProjectsList';\nimport { PageLayout } from '../layout/PageLayout';\nimport { Badge } from '../shared/Badge';\nimport { PageHeader } from '../shared/PageHeader';\nimport { Row } from '../shared/Row';\n\ntype ProjectsScreenProps = {\n  projects: Project[];\n};\n\nexport const ProjectsScreen = (\n  props: ProjectsScreenProps\n): React.ReactElement => {\n  const { projects } = props;\n\n  const numOfProjects = projects.length;\n\n  return (\n    <PageLayout>\n      <Row>\n        <PageHeader>Projetos</PageHeader>\n        <Badge className=\"ml-3 self-start\">{numOfProjects}</Badge>\n      </Row>\n\n      <ProjectsList projects={projects} />\n    </PageLayout>\n  );\n};\n","import { Project } from '../types/Project';\n\nexport const projects: Project[] = [\n  {\n    id: 'secret-hash',\n    name: '#️⃣ Secret Hash Chrome Extension',\n    summary: ['Extensão do Chrome para gerar hash a partir de texto.'],\n    srcUrl: {\n      url: 'https://github.com/leeorf/secret-hash-chrome-extesion',\n    },\n    demoUrl: {\n      url: 'https://chrome.google.com/webstore/detail/secret-hash/ibpdnpmcfhoniipkhjflmmaclfedbgcj',\n    },\n    cover: {\n      srcPath: 'projects/secret-hash/cover.png',\n    },\n    startDate: '2022-09-21',\n    endDate: '2022-10-27',\n    tags: [\n      'Chrome Extension',\n      'TypeScript',\n      'Webpack',\n      'React',\n      'Hash Algorithm',\n    ],\n    repo: {\n      owner: 'leeorf',\n      name: 'secret-hash-chrome-extesion',\n    },\n  },\n  {\n    id: 'leeorf-dev',\n    name: '👨🏾‍💻 leeorf.dev',\n    summary: [\n      'Meu webiste pessoal com uma lista de projetos e posts sobre carreira, vida, desenvolvimento web e tecnologia.',\n    ],\n    srcUrl: {\n      url: 'https://github.com/leeorf/leeorf.github.io',\n    },\n    demoUrl: {\n      url: 'https://leeorf.github.io/',\n    },\n    cover: {\n      srcPath: 'projects/leeorf-dev/cover.png',\n    },\n    startDate: '2022-10-28',\n    tags: ['TypeScript', 'React', 'Gatsby', 'Blog', 'Portfolio'],\n    repo: {\n      owner: 'leeorf',\n      name: 'leeorf.github.io',\n    },\n  },\n];\n","import React from 'react';\nimport { ProjectsScreen } from '../components/screens/ProjectsScreen';\nimport { projects } from '../data/projects';\n\nconst Projects = (): React.ReactElement => {\n  return <ProjectsScreen projects={projects} />;\n};\n\nexport default Projects;\n"],"names":["HeadingLevel","Gallery","props","children","React","className","months","dateString","isoDate","options","withDays","withDay","match","Error","date","Date","year","getFullYear","getMonth","getDate","Button","link","onClick","startAdornment","classes","classNames","flex","rounded","HyperLink","InteractiveText","hoverClassName","type","headingClasses","h1","h2","h3","Heading","level","HeadingElement","Row","responsive","Card","wrappedElement","DateRange","start","end","startDateString","endDateString","separator","FiCalendar","ProjectPreview","project","projectTagsElement","tags","_project$tags","length","Tags","numToShow","projectDates","startDate","endDate","projectSummaryLines","summary","_project$summary","map","key","value","split","word","slice","join","projectSummary","demoLink","demoUrl","archived","FaPlay","sourceCodeLink","srcUrl","FaGithub","projectCover","cover","FluidImage","image","name","ProjectsList","projectsElements","projects","id","Badge","PageHeader","uppercase","ProjectsScreen","numOfProjects","PageLayout","url","srcPath","repo","owner"],"sourceRoot":""}